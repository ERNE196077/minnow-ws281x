#ifndef SPI_H_
#define SPI_H_




#define SPI_BASE_ADDR			0x90c18000
#define SPI_SSP_GENERAL_OFFSET	(0x400 / 4)
#define SPI_IRQn 				19


typedef struct{
uint32_t __sscr0__;
#define SPI_SSP_SSCR0_MOD_NORMALSSPMODE				(0 << 31)
#define SPI_SSP_SSCR0_MOD_NETWORKMODE				(1 << 31)
#define SPI_SSP_SSCR0_ACS_CLOCKBYNCSANDECS			(0 << 30)
#define SPI_SSP_SSCR0_ACS_CLOCKBYAUDIOCLOCK			(1 << 30)
#define SPI_SSP_SSCR0_TIM_INTERRUPTONFIFOUNDERRUN	(0 << 23)
#define SPI_SSP_SSCR0_TIM_NOINTERRUPTFIFOUNDERRUN	(1 << 23)
#define SPI_SSP_SSCR0_RIM_INTERRUPTONFIFOOVERRUN	(0 << 22)
#define SPI_SSP_SSCR0_RIM_NOINTERRUPTFIFOOVERRUN	(1 << 22)
#define SPI_SSP_SSCR0_NCS_CLOCKBYECS				(0 << 21)
#define SPI_SSP_SSCR0_NCS_CLOCKBYNCSNETWORKCLOCK	(1 << 21)
#define SPI_SSP_SSCR0_EDSS_ZEROPREPENDTODSS			(0 << 20)
#define SPI_SSP_SSCR0_EDSS_ONEPREPENDTODSS			(1 << 20)
#define SPI_SSP_SSCR0_SCR_SERIALCLOCKRATE(value)	(value << 8)	// 0 - 4095
#define SPI_SSP_SSCR0_SSE_SSPDISABLE				(0 << 7)
#define SPI_SSP_SSCR0_SSE_SSPENABLE					(1 << 7)
#define SPI_SSP_SSCR0_ECS_CLOCKFROMONCHIPCLOCK		(0 << 6)
#define SPI_SSP_SSCR0_ECS_EXTERNALCLOCKFROMGPIO		(1 << 6)
#define SPI_SSP_SSCR0_FRF_MOTOROLA					(0 << 4)
#define SPI_SSP_SSCR0_FRF_TEXASINSTRUMENTS			(1 << 4)
#define SPI_SSP_SSCR0_FRF_NATIONALSEMICONDUCTOR		(2 << 4)
#define SPI_SSP_SSCR0_FRF_PROGRAMMABLE				(3 << 4)
#define SPI_SSP_SSCR0_DSS_DATASIZESELECT(value)		(value)			// 4 bits. If EDSS is 1, it appends one 1 at the value of these bits.
uint32_t __sscr1__;
#define SPI_SSP_SSCR1_TTELP_TXDTRISTATEONCLOCKEDGE	(0 << 31)
#define SPI_SSP_SSCR1_TTELP_TXDTRISTATEAFTERCLKEDGE	(1 << 31)
#define SPI_SSP_SSCR1_TTE_TXDNOTTRISTATED			(0 << 30)
#define SPI_SSP_SSCR1_TTE_TXDTRISTATEWHENNOTRANSMIT	(1 << 30)
#define SPI_SSP_SSCR1_EBCEI_NOINTERRUPTONBITCOUNTERR	(0 << 29)
#define SPI_SSP_SSCR1_EBCEI_INTERRUPTONBITCOUNTERR	(1 << 29)
#define SPI_SSP_SSCR1_SCFR_SLAVECLKFREERUNNING		(0 << 28)
#define SPI_SSP_SSCR1_SCFR_SLAVECLKONLYONTRANSFER	(1 << 28)
#define SPI_SSP_SSCR1_ECRA_NOREQCLOCKFROMOTHERSSP	(0 << 27)
#define SPI_SSP_SSCR1_ECRA_REQCLOCKFROMOTHERSSP		(1 << 27)
#define SPI_SSP_SSCR1_ECRB_NOREQCLOCKFROMOTHERSSP	(0 << 26)
#define SPI_SSP_SSCR1_ECRB_REQCLOCKFROMOTHERSSP		(1 << 26)
#define SPI_SSP_SSCR1_SCLKDIR_MASTERMODECLOCK		(0 << 25)
#define SPI_SSP_SSCR1_SCLKDIR_SLAVEMODECLOCKRECEIVE	(1 << 25)
#define SPI_SSP_SSCR1_SFRMDIR_MASTERMODEFRAME		(0 << 24)
#define SPI_SSP_SSCR1_SFRMDIR_SLAVEMODEFRAMERECEIVE	(1 << 24)
#define SPI_SSP_SSCR1_RWOT_TRANSMITANDRECEIVE		(0 << 23)
#define SPI_SSP_SSCR1_RWOT_ONLYRECEIVEMODE			(1 << 23)
#define SPI_SSP_SSCR1_TRAIL_CPUHANDLETRAILINGBYTE	(0 << 22)
#define SPI_SSP_SSCR1_TRAIL_DMAHANDLETRAILINGBYTE	(1 << 22)
#define SPI_SSP_SSCR1_TSRE_DMATRANSMITREQDISABLE	(0 << 21)
#define SPI_SSP_SSCR1_TSRE_DMATRANSMITREQENABLE		(1 << 21)
#define SPI_SSP_SSCR1_RSRE_DMARECEIVEREQDISABLE		(0 << 20)
#define SPI_SSP_SSCR1_RSRE_DMARECEIVEREQENABLE		(1 << 20)
#define SPI_SSP_SSCR1_TINTE_NOINTERRUPTONTIMEOUT	(0 << 19)
#define SPI_SSP_SSCR1_TINTE_INTERRUPTONTIMEOUT		(1 << 19)
#define SPI_SSP_SSCR1_PINTE_NOTRAILINGBYTEINTERRUPT	(0 << 18)
#define SPI_SSP_SSCR1_PINTE_TRAILINGBYTEINTERRUPT	(1 << 18)
#define SPI_SSP_SSCR1_IFS_FRAMEPOLARITYBYTHEFORMAT	(0 << 16)
#define SPI_SSP_SSCR1_IFS_FRAMEPOLARITYINVERTED		(1 << 16)
#define SPI_SSP_SSCR1_STRF_RWFORTRANSMITFIFO		(0 << 15)
#define SPI_SSP_SSCR1_STRF_RWFORRECEIVEFIFO			(1 << 15)
#define SPI_SSP_SSCR1_EFWR_DISABLEFIFOREADWRITE		(0 << 14)
#define SPI_SSP_SSCR1_EFWR_ENABLEFIFOREADWRITE		(1 << 14)
#define SPI_SSP_SSCR1_RFT_RECEIVEFIFOTRIGTHRESHOLD(value)	(value << 10)	// 0 - 4095
#define SPI_SSP_SSCR1_TFT_TRANSMITFIFOTRIGTHRESHOLD(value)	(value << 6)	// 0 - 4095
#define SPI_SSP_SSCR1_MWDS_MICROWIRE8BITDATASIZE	(0 << 5)
#define SPI_SSP_SSCR1_MWDS_MICROWIRE16BITDATASIZE	(1 << 5)
#define SPI_SSP_SSCR1_SPH_MOTOROLACLKOFFATFRMSTART	(0 << 4)
#define SPI_SSP_SSCR1_SPH_MOTOROLACLKONATFRMSTART	(1 << 4)
#define SPI_SSP_SSCR1_SPO_MOTOROLACLOCKIDLEASLOW	(0 << 3)
#define SPI_SSP_SSCR1_SPO_MOTOROLACLOCKIDLEASHIGH	(1 << 3)
#define SPI_SSP_SSCR1_TIE_TRANSFIFOLEVELINTERRDISA	(0 << 1)
#define SPI_SSP_SSCR1_TIE_TRANSFIFOLEVELINTERRENA	(1 << 1)
#define SPI_SSP_SSCR1_RIE_RECEIFIFOLEVELINTERRDISA	(0)
#define SPI_SSP_SSCR1_RIE_RECEIFIFOLEVELINTERRENA	(1)

uint32_t __sssr__;
#define SPI_SSP_SSSR_BCE_BITCOUNTERROR				(1 << 23)
#define SPI_SSP_SSSR_CSS_CLOCKSYNCSTATUS			(1 << 22)
#define SPI_SSP_SSSR_TUR_TRANSMITFIFOUNDERRUN		(1 << 21)
#define SPI_SSP_SSSR_EOC_ENDOFDMACHAIN				(1 << 20)
#define SPI_SSP_SSSR_TINT_RECEIVERTIMEOUTINTERRUPT	(1 << 19)
#define SPI_SSP_SSSR_PINT_PENDINGTRAILINGBYTE		(1 << 18)
#define SPI_SSP_SSSR_RFL_RECEIVEFIFOLEVEL			(0xF << 12)
#define SPI_SSP_SSSR_TFL_TRANSMITFIFOLEVEL			(0xF << 8)
#define SPI_SSP_SSSR_ROR_RECEIVEFIFOOVERRUN			(1 << 7)
#define SPI_SSP_SSSR_RFS_RECEIVEFIFOSERVICEREQ		(1 << 6)
#define SPI_SSP_SSSR_TFS_TRANSMITFIFOSERVICEREQ		(1 << 5)
#define SPI_SSP_SSSR_BSY_SPIBUSY					(1 << 4)
#define SPI_SSP_SSSR_RNE_RECEIVEFIFONOTEMPTY		(1 << 3)
#define SPI_SSP_SSSR_TNF_TRANSMITFIFONOTFULL		(1 << 2)

uint32_t __ssitr__;	//ONLY FOR TESTING

uint32_t __ssdr__;		// DATA REGISTER, USED TO READ WRITE DATA FROM/TO THE RECEIVE/TRANSMIT FIFO'S

uint32_t __rsv_0x014__[5]; // POSSIBLY ARE DATA REGISTERS
uint32_t __ssto__;
#define SPI_SSP_SSTO_INACTIVITYWITHINTHERECEIVEFIFO(value)	(value & 0xFFFFFF)
uint32_t __sspsp__;	// USED FOR SPI IN NETWORK MODE
uint32_t __sstsa__;	// USED FOR SPI IN NETWORK MODE
uint32_t __ssrsa__;	// USED FOR SPI IN NETWORK MODE
uint32_t __sstss__;	// USED FOR SPI IN NETWORK MODE
uint32_t __ssacd__;
#define SPI_SSP_SSACD_ACPS_AUDIOCLK_5_622MHZ		(0 << 4)
#define SPI_SSP_SSACD_ACPS_AUDIOCLK_11_345MHZ		(1 << 4)
#define SPI_SSP_SSACD_ACPS_AUDIOCLK_12_235MHZ		(2 << 4)
#define SPI_SSP_SSACD_ACPS_AUDIOCLK_14_857MHZ		(3 << 4)
#define SPI_SSP_SSACD_ACPS_AUDIOCLK_32_842MHZ		(4 << 4)
#define SPI_SSP_SSACD_ACPS_AUDIOCLK_48_000MHZ		(5 << 4)
#define SPI_SSP_SSACD_SCDB_SYSCLKDIVIDEVBY4			(0 << 3)
#define SPI_SSP_SSACD_SCDB_SYSCLKNODIVIDED			(1 << 3)
#define SPI_SSP_SSACD_ACDS_AUDIOCLKDIVIDER(value)	(value)		// 1 - 5
uint32_t __itf__;		// INTEGRATED IN-CHIP SOUND INTERFACE
#define SPI_SSP_ITF_READTRANSFIFOENTRIESI2S			(0x7FF << 20)
#define SPI_SSP_ITF_SETTRANSLOWWATERMARKI2S(value)	((value & 0x3FF) << 10)
#define SPI_SSP_ITF_SETTRANSHIGHWATERMARK12S(value)	(value & 0x3FF)
uint32_t __sitf__;
#define SPI_SSP_SITF_READTRANSFIFOENTRIESSPI		(0x1FF << 20)
#define SPI_SSP_SITF_SETTRANSLOWWATERMARKSPI(value)	((value & 0xFF) << 8)
#define SPI_SSP_SITF_SETTRANSHIGHWATERMARKSPI(value)	(value & 0xFF)
uint32_t __sirf__;
#define SPI_SSP_SIRF_READRECEIFIFOENTRIESSPI		(0x1FF << 20)
#define SPI_SSP_SIRF_SETRECEILOWWATERMARKSPI(value)	((value & 0xFF) << 10)
#define SPI_SSP_SIRF_SETRECEIHIGHWATERMARKSPI(value)	(value & 0xFF)
}__attribute__((packed)) ssp_control_t;

typedef struct{
uint32_t __prv_clock_params__;
#define SPI_SSP_PRVCLKPARAMS_CLOCKUPDATE			(1 << 31)
#define SPI_SSP_PRVCLKPARAMS_N_DIVISOR(value)		((value & 0x7FFF) << 16)
#define SPI_SSP_PRVCLKPARAMS_M_DIVIDEND(value)		((value & 0x7FFF) << 1)
#define SPI_SSP_PRVCLKPARAMS_ENABLECLOCK			(1)
#define SPI_SSP_PRVCLKPARAMS_DISABLECLOCK			(0)
uint32_t __resets__;
uint32_t __general__;
uint32_t __ssp_reg__;
uint32_t __rsv_0x410__[2];
uint32_t __spi_cs_ctrl__;
}__attribute__((packed)) ssp_general_t;


typedef struct{
			 __u32			spi_irqn;
			 __u32			req_int;
			 __u32          spi_bar;
			 __u32	        spi_bar_size;
	volatile __u32          *spi_base;
	volatile ssp_control_t  *ssp_control_block;
    volatile ssp_general_t  *ssp_general_block;
} spi_dev_t;


#endif /* SPI_H_ */